version: '3.8'

services:
  bridge:
    build: .
    container_name: chorus_bridge
    restart: unless-stopped
    ports:
      - "8000:8000"
      - "9090:9090"
    environment:
      - BRIDGE_INSTANCE_ID=${BRIDGE_INSTANCE_ID:-bridge-prod}
      - BRIDGE_DATABASE_URL=${DATABASE_URL}
      - BRIDGE_CONDUCTOR_MODE=${CONDUCTOR_MODE:-http}
      - BRIDGE_CONDUCTOR_BASE_URL=${CONDUCTOR_BASE_URL}
      - BRIDGE_TRUST_STORE_PATH=/app/trust.json
      - BRIDGE_JWT_ENFORCEMENT_ENABLED=${JWT_ENFORCEMENT_ENABLED:-true}
      - BRIDGE_JWT_PUBLIC_KEY=${JWT_PUBLIC_KEY}
      - BRIDGE_BRIDGE_PRIVATE_KEY=${BRIDGE_PRIVATE_KEY}
      - BRIDGE_ACTIVITYPUB_ACTOR_DOMAIN=${ACTIVITYPUB_ACTOR_DOMAIN}
      - BRIDGE_PROMETHEUS_PORT=9090
    volumes:
      - ./trust.json:/app/trust.json:ro
      - ./keys:/app/keys:ro
      - bridge_data:/app/data
    depends_on:
      - postgres
    networks:
      - chorus-network

  postgres:
    image: postgres:15-alpine
    container_name: chorus_bridge_db
    restart: unless-stopped
    environment:
      - POSTGRES_DB=${POSTGRES_DB:-chorus_bridge}
      - POSTGRES_USER=${POSTGRES_USER:-bridge}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - chorus-network

  prometheus:
    image: prom/prometheus:latest
    container_name: chorus_bridge_prometheus
    restart: unless-stopped
    ports:
      - "9091:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml:ro
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
    networks:
      - chorus-network

  grafana:
    image: grafana/grafana:latest
    container_name: chorus_bridge_grafana
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_PASSWORD:-admin}
    volumes:
      - grafana_data:/var/lib/grafana
      - ./monitoring/grafana/dashboards:/etc/grafana/provisioning/dashboards:ro
      - ./monitoring/grafana/datasources:/etc/grafana/provisioning/datasources:ro
    networks:
      - chorus-network

volumes:
  postgres_data:
  bridge_data:
  grafana_data:

networks:
  chorus-network:
    driver: bridge
